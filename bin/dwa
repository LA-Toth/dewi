#!/usr/bin/env python3.2
# vim: sts=4 ts=8 et ai

import time
start_time = time.time()

import errno
import os
import sys


def resolve_link_chain(path):
    try:
        os.stat(path)
    except os.error as err:
        # do not raise exception in case of broken symlink;
        # we want to know the final target anyway
        if err.errno == errno.ENOENT:
            pass
        else:
            raise
    if not os.path.isabs(path):
        basedir = os.path.dirname(os.path.abspath(path))
    else:
        basedir = os.path.dirname(path)
    p = path
    while os.path.islink(p):
        p = os.readlink(p)
        if not os.path.isabs(p):
            p = os.path.join(basedir, p)
            basedir = os.path.dirname(p)
    return os.path.join(basedir, p)


# This lets symlinking the original binary to anyone
root_dir = os.path.dirname(os.path.dirname(
    os.path.abspath(resolve_link_chain(os.path.abspath(sys.argv[0])))))
if not os.path.samefile(sys.argv[0], root_dir + '/bin/dwa'):
    print("Unexpected file, perhaps you copied 'dwa'?")
    sys.exit(1)

prog_name = 'dwa'

lib_dir = "%s/lib" % (root_dir,)
sys.path.append(lib_dir)
sys.path.append("%s/etc" % (root_dir,))

from DWA.Core.Main import main

main(root_dir, prog_name, start_time)
